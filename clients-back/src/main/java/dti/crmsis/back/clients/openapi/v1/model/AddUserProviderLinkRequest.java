package dti.crmsis.back.clients.openapi.v1.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import com.fasterxml.jackson.annotation.JsonProperty;

@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
public class AddUserProviderLinkRequest  {

    /**
      * Unique identifier linking a user to the installed integration. Generated by the integration.
     **/
    private UUID userProviderId;
    /**
      * Pipedrive user ID
     **/
    private Integer userId;
    /**
      * Pipedrive company ID
     **/
    private Integer companyId;
    /**
      * Pipedrive Marketplace client ID of the installed integration
     **/
    private String marketplaceClientId;

    /**
    * Unique identifier linking a user to the installed integration. Generated by the integration.
    * @return userProviderId
    **/
    @JsonProperty("user_provider_id")
    public UUID getUserProviderId() {
        return userProviderId;
    }

    /**
     * Set userProviderId
     **/
    public void setUserProviderId(UUID userProviderId) {
        this.userProviderId = userProviderId;
    }

    public AddUserProviderLinkRequest userProviderId(UUID userProviderId) {
        this.userProviderId = userProviderId;
        return this;
    }

    /**
    * Pipedrive user ID
    * @return userId
    **/
    @JsonProperty("user_id")
    public Integer getUserId() {
        return userId;
    }

    /**
     * Set userId
     **/
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public AddUserProviderLinkRequest userId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
    * Pipedrive company ID
    * @return companyId
    **/
    @JsonProperty("company_id")
    public Integer getCompanyId() {
        return companyId;
    }

    /**
     * Set companyId
     **/
    public void setCompanyId(Integer companyId) {
        this.companyId = companyId;
    }

    public AddUserProviderLinkRequest companyId(Integer companyId) {
        this.companyId = companyId;
        return this;
    }

    /**
    * Pipedrive Marketplace client ID of the installed integration
    * @return marketplaceClientId
    **/
    @JsonProperty("marketplace_client_id")
    public String getMarketplaceClientId() {
        return marketplaceClientId;
    }

    /**
     * Set marketplaceClientId
     **/
    public void setMarketplaceClientId(String marketplaceClientId) {
        this.marketplaceClientId = marketplaceClientId;
    }

    public AddUserProviderLinkRequest marketplaceClientId(String marketplaceClientId) {
        this.marketplaceClientId = marketplaceClientId;
        return this;
    }

    /**
     * Create a string representation of this pojo.
     **/
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AddUserProviderLinkRequest {\n");

        sb.append("    userProviderId: ").append(toIndentedString(userProviderId)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
        sb.append("    marketplaceClientId: ").append(toIndentedString(marketplaceClientId)).append("\n");
        
        sb.append("}");
        return sb.toString();
    }

    /**
     * Compares this object to the specified object. The result is
     * {@code true} if and only if the argument is not
     * {@code null} and is a {@code AddUserProviderLinkRequest} object that
     * contains the same values as this object.
     *
     * @param   obj   the object to compare with.
     * @return  {@code true} if the objects are the same;
     *          {@code false} otherwise.
     **/
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;

        AddUserProviderLinkRequest model = (AddUserProviderLinkRequest) obj;

        return java.util.Objects.equals(userProviderId, model.userProviderId) &&
        java.util.Objects.equals(userId, model.userId) &&
        java.util.Objects.equals(companyId, model.companyId) &&
        java.util.Objects.equals(marketplaceClientId, model.marketplaceClientId);
    }

    /**
     * Returns a hash code for a {@code AddUserProviderLinkRequest}.
     *
     * @return a hash code value for a {@code AddUserProviderLinkRequest}.
     **/
    @Override
    public int hashCode() {
        return java.util.Objects.hash(userProviderId,
        userId,
        companyId,
        marketplaceClientId);
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private static String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
    public static class AddUserProviderLinkRequestQueryParam  {

        @jakarta.ws.rs.QueryParam("userProviderId")
        private UUID userProviderId;
        @jakarta.ws.rs.QueryParam("userId")
        private Integer userId;
        @jakarta.ws.rs.QueryParam("companyId")
        private Integer companyId;
        @jakarta.ws.rs.QueryParam("marketplaceClientId")
        private String marketplaceClientId;

        /**
        * Unique identifier linking a user to the installed integration. Generated by the integration.
        * @return userProviderId
        **/
        @com.fasterxml.jackson.annotation.JsonProperty("user_provider_id")
        public UUID getUserProviderId() {
            return userProviderId;
        }

        /**
         * Set userProviderId
         **/
        public void setUserProviderId(UUID userProviderId) {
            this.userProviderId = userProviderId;
        }

        public AddUserProviderLinkRequestQueryParam userProviderId(UUID userProviderId) {
            this.userProviderId = userProviderId;
            return this;
        }

        /**
        * Pipedrive user ID
        * @return userId
        **/
        @com.fasterxml.jackson.annotation.JsonProperty("user_id")
        public Integer getUserId() {
            return userId;
        }

        /**
         * Set userId
         **/
        public void setUserId(Integer userId) {
            this.userId = userId;
        }

        public AddUserProviderLinkRequestQueryParam userId(Integer userId) {
            this.userId = userId;
            return this;
        }

        /**
        * Pipedrive company ID
        * @return companyId
        **/
        @com.fasterxml.jackson.annotation.JsonProperty("company_id")
        public Integer getCompanyId() {
            return companyId;
        }

        /**
         * Set companyId
         **/
        public void setCompanyId(Integer companyId) {
            this.companyId = companyId;
        }

        public AddUserProviderLinkRequestQueryParam companyId(Integer companyId) {
            this.companyId = companyId;
            return this;
        }

        /**
        * Pipedrive Marketplace client ID of the installed integration
        * @return marketplaceClientId
        **/
        @com.fasterxml.jackson.annotation.JsonProperty("marketplace_client_id")
        public String getMarketplaceClientId() {
            return marketplaceClientId;
        }

        /**
         * Set marketplaceClientId
         **/
        public void setMarketplaceClientId(String marketplaceClientId) {
            this.marketplaceClientId = marketplaceClientId;
        }

        public AddUserProviderLinkRequestQueryParam marketplaceClientId(String marketplaceClientId) {
            this.marketplaceClientId = marketplaceClientId;
            return this;
        }

        /**
         * Create a string representation of this pojo.
         **/
        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append("class AddUserProviderLinkRequestQueryParam {\n");

            sb.append("    userProviderId: ").append(toIndentedString(userProviderId)).append("\n");
            sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
            sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
            sb.append("    marketplaceClientId: ").append(toIndentedString(marketplaceClientId)).append("\n");
            sb.append("}");
            return sb.toString();
        }

        /**
         * Convert the given object to string with each line indented by 4 spaces
         * (except the first line).
         */
        private static String toIndentedString(Object o) {
            if (o == null) {
                return "null";
            }
            return o.toString().replace("\n", "\n    ");
        }
    }}
