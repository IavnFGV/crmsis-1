package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddNoteRequest;
import java.math.BigDecimal;
import dti.crmsis.back.clients.openapi.v1.model.CommentPostPutObject;
import dti.crmsis.back.clients.openapi.v1.model.DeleteCommentResponse;
import dti.crmsis.back.clients.openapi.v1.model.DeleteNoteResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetCommentsResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetNotesResponse;
import java.time.LocalDate;
import dti.crmsis.back.clients.openapi.v1.model.NoteRequest;
import java.util.UUID;
import dti.crmsis.back.clients.openapi.v1.model.UpsertCommentResponse;
import dti.crmsis.back.clients.openapi.v1.model.UpsertNoteResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/notes")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Notes")
@jakarta.enterprise.context.ApplicationScoped
public interface NotesApi {

     /**
     * Add a note
     *
     * Adds a new note.
     *
     * @param addNoteRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addNote", method="POST", path="/v1/notes")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addNote", method="POST", path="/v1/notes")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addNote")
    public UpsertNoteResponse addNote(
        AddNoteRequest addNoteRequest
    );

     /**
     * Add a comment to a note
     *
     * Adds a new comment to a note.
     *
     * @param id The ID of the note
     * @param commentPostPutObject 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addNoteComment", method="POST", path="/v1/notes/{id}/comments")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addNoteComment", method="POST", path="/v1/notes/{id}/comments")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Path("/{id}/comments")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addNoteComment")
    public UpsertCommentResponse addNoteComment(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        CommentPostPutObject commentPostPutObject
    );

     /**
     * Delete a comment related to a note
     *
     * Deletes a comment.
     *
     * @param id The ID of the note
     * @param commentId The ID of the comment
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteComment", method="DELETE", path="/v1/notes/{id}/comments/{commentId}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteComment", method="DELETE", path="/v1/notes/{id}/comments/{commentId}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}/comments/{commentId}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteComment")
    public DeleteCommentResponse deleteComment(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("commentId") @jakarta.ws.rs.PathParam("commentId")UUID commentId
    );

     /**
     * Delete a note
     *
     * Deletes a specific note.
     *
     * @param id The ID of the note
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteNote", method="DELETE", path="/v1/notes/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteNote", method="DELETE", path="/v1/notes/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteNote")
    public DeleteNoteResponse deleteNote(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get one comment
     *
     * Returns the details of a comment.
     *
     * @param id The ID of the note
     * @param commentId The ID of the comment
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getComment", method="GET", path="/v1/notes/{id}/comments/{commentId}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getComment", method="GET", path="/v1/notes/{id}/comments/{commentId}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/comments/{commentId}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getComment")
    public UpsertCommentResponse getComment(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("commentId") @jakarta.ws.rs.PathParam("commentId")UUID commentId
    );

     /**
     * Get one note
     *
     * Returns details about a specific note.
     *
     * @param id The ID of the note
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getNote", method="GET", path="/v1/notes/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getNote", method="GET", path="/v1/notes/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getNote")
    public UpsertNoteResponse getNote(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get all comments for a note
     *
     * Returns all comments associated with a note.
     *
     * @param id The ID of the note
     * @param start Pagination start
     * @param limit Items shown per page
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getNoteComments", method="GET", path="/v1/notes/{id}/comments")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getNoteComments", method="GET", path="/v1/notes/{id}/comments")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/comments")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getNoteComments")
    public GetCommentsResponse getNoteComments(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("start") @jakarta.ws.rs.QueryParam("start") Integer start, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("limit") @jakarta.ws.rs.QueryParam("limit") Integer limit
    );

     /**
     * Get all notes
     *
     * Returns all notes.
     *
     * @param userId The ID of the user whose notes to fetch. If omitted, notes by all users will be returned.
     * @param leadId The ID of the lead which notes to fetch. If omitted, notes about all leads will be returned.
     * @param dealId The ID of the deal which notes to fetch. If omitted, notes about all deals will be returned.
     * @param personId The ID of the person whose notes to fetch. If omitted, notes about all persons will be returned.
     * @param orgId The ID of the organization which notes to fetch. If omitted, notes about all organizations will be returned.
     * @param start Pagination start
     * @param limit Items shown per page
     * @param sort The field names and sorting mode separated by a comma (`field_name_1 ASC`, `field_name_2 DESC`). Only first-level field keys are supported (no nested keys). Supported fields: `id`, `user_id`, `deal_id`, `person_id`, `org_id`, `content`, `add_time`, `update_time`.
     * @param startDate The date in format of YYYY-MM-DD from which notes to fetch
     * @param endDate The date in format of YYYY-MM-DD until which notes to fetch to
     * @param pinnedToLeadFlag If set, the results are filtered by note to lead pinning state
     * @param pinnedToDealFlag If set, the results are filtered by note to deal pinning state
     * @param pinnedToOrganizationFlag If set, the results are filtered by note to organization pinning state
     * @param pinnedToPersonFlag If set, the results are filtered by note to person pinning state
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getNotes", method="GET", path="/v1/notes")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getNotes", method="GET", path="/v1/notes")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getNotes")
    public GetNotesResponse getNotes(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("user_id") @jakarta.ws.rs.QueryParam("user_id") Integer userId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("lead_id") @jakarta.ws.rs.QueryParam("lead_id") UUID leadId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("deal_id") @jakarta.ws.rs.QueryParam("deal_id") Integer dealId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("person_id") @jakarta.ws.rs.QueryParam("person_id") Integer personId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("org_id") @jakarta.ws.rs.QueryParam("org_id") Integer orgId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("start") @jakarta.ws.rs.QueryParam("start") Integer start, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("limit") @jakarta.ws.rs.QueryParam("limit") Integer limit, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("sort") @jakarta.ws.rs.QueryParam("sort") String sort, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("start_date") @jakarta.ws.rs.QueryParam("start_date") LocalDate startDate, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("end_date") @jakarta.ws.rs.QueryParam("end_date") LocalDate endDate, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("pinned_to_lead_flag") @jakarta.ws.rs.QueryParam("pinned_to_lead_flag") BigDecimal pinnedToLeadFlag, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("pinned_to_deal_flag") @jakarta.ws.rs.QueryParam("pinned_to_deal_flag") BigDecimal pinnedToDealFlag, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("pinned_to_organization_flag") @jakarta.ws.rs.QueryParam("pinned_to_organization_flag") BigDecimal pinnedToOrganizationFlag, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("pinned_to_person_flag") @jakarta.ws.rs.QueryParam("pinned_to_person_flag") BigDecimal pinnedToPersonFlag
    );

     /**
     * Update a comment related to a note
     *
     * Updates a comment related to a note.
     *
     * @param id The ID of the note
     * @param commentId The ID of the comment
     * @param commentPostPutObject 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateCommentForNote", method="PUT", path="/v1/notes/{id}/comments/{commentId}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateCommentForNote", method="PUT", path="/v1/notes/{id}/comments/{commentId}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}/comments/{commentId}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateCommentForNote")
    public UpsertCommentResponse updateCommentForNote(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("commentId") @jakarta.ws.rs.PathParam("commentId")UUID commentId, 
        CommentPostPutObject commentPostPutObject
    );

     /**
     * Update a note
     *
     * Updates a note.
     *
     * @param id The ID of the note
     * @param noteRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateNote", method="PUT", path="/v1/notes/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateNote", method="PUT", path="/v1/notes/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateNote")
    public UpsertNoteResponse updateNote(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        NoteRequest noteRequest
    );

}