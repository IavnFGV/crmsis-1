package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddProjectRequest;
import dti.crmsis.back.clients.openapi.v1.model.AddProjectResponse;
import dti.crmsis.back.clients.openapi.v1.model.DeleteProjectResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetActivitiesCollectionResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetProjectBoardsResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetProjectGroupsResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetProjectPhasesResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetProjectPlanResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetProjectResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetProjectsResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetTasksResponse;
import dti.crmsis.back.clients.openapi.v1.model.ProjectPutPlanItemBodyObject;
import dti.crmsis.back.clients.openapi.v1.model.UpdateActivityPlanItemResponse;
import dti.crmsis.back.clients.openapi.v1.model.UpdateProjectRequest;
import dti.crmsis.back.clients.openapi.v1.model.UpdateProjectResponse;
import dti.crmsis.back.clients.openapi.v1.model.UpdateTaskPlanItemResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/projects")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Projects")
@jakarta.enterprise.context.ApplicationScoped
public interface ProjectsApi {

     /**
     * Add a project
     *
     * Adds a new project. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys.
     *
     * @param addProjectRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addProject", method="POST", path="/v1/projects")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addProject", method="POST", path="/v1/projects")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addProject")
    public AddProjectResponse addProject(
        AddProjectRequest addProjectRequest
    );

     /**
     * Archive a project
     *
     * Archives a project.
     *
     * @param id The ID of the project
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="archiveProject", method="POST", path="/v1/projects/{id}/archive")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="archiveProject", method="POST", path="/v1/projects/{id}/archive")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Path("/{id}/archive")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("archiveProject")
    public UpdateProjectResponse archiveProject(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Delete a project
     *
     * Marks a project as deleted.
     *
     * @param id The ID of the project
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteProject", method="DELETE", path="/v1/projects/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteProject", method="DELETE", path="/v1/projects/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteProject")
    public DeleteProjectResponse deleteProject(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get details of a project
     *
     * Returns the details of a specific project. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the `key` value of project fields.
     *
     * @param id The ID of the project
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProject", method="GET", path="/v1/projects/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProject", method="GET", path="/v1/projects/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProject")
    public GetProjectResponse getProject(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Returns project activities
     *
     * Returns activities linked to a specific project.
     *
     * @param id The ID of the project
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProjectActivities", method="GET", path="/v1/projects/{id}/activities")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProjectActivities", method="GET", path="/v1/projects/{id}/activities")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/activities")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProjectActivities")
    public GetActivitiesCollectionResponse getProjectActivities(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Returns project groups
     *
     * Returns all active groups under a specific project.
     *
     * @param id The ID of the project
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProjectGroups", method="GET", path="/v1/projects/{id}/groups")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProjectGroups", method="GET", path="/v1/projects/{id}/groups")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/groups")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProjectGroups")
    public GetProjectGroupsResponse getProjectGroups(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Returns project plan
     *
     * Returns information about items in a project plan. Items consists of tasks and activities and are linked to specific project phase and group.
     *
     * @param id The ID of the project
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProjectPlan", method="GET", path="/v1/projects/{id}/plan")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProjectPlan", method="GET", path="/v1/projects/{id}/plan")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/plan")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProjectPlan")
    public GetProjectPlanResponse getProjectPlan(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Returns project tasks
     *
     * Returns tasks linked to a specific project.
     *
     * @param id The ID of the project
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProjectTasks", method="GET", path="/v1/projects/{id}/tasks")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProjectTasks", method="GET", path="/v1/projects/{id}/tasks")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/tasks")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProjectTasks")
    public GetTasksResponse getProjectTasks(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get all projects
     *
     * Returns all projects. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>.
     *
     * @param cursor For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param limit For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
     * @param filterId The ID of the filter to use
     * @param status If supplied, includes only projects with the specified statuses. Possible values are `open`, `completed`, `canceled` and `deleted`. By default `deleted` projects are not returned.
     * @param phaseId If supplied, only projects in specified phase are returned
     * @param includeArchived If supplied with `true` then archived projects are also included in the response. By default only not archived projects are returned.
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProjects", method="GET", path="/v1/projects")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProjects", method="GET", path="/v1/projects")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProjects")
    public GetProjectsResponse getProjects(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("cursor") @jakarta.ws.rs.QueryParam("cursor") String cursor, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("limit") @jakarta.ws.rs.QueryParam("limit") Integer limit, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("filter_id") @jakarta.ws.rs.QueryParam("filter_id") Integer filterId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("status") @jakarta.ws.rs.QueryParam("status") String status, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("phase_id") @jakarta.ws.rs.QueryParam("phase_id") Integer phaseId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("include_archived") @jakarta.ws.rs.QueryParam("include_archived") Boolean includeArchived
    );

     /**
     * Get all project boards
     *
     * Returns all projects boards that are not deleted.
     *
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProjectsBoards", method="GET", path="/v1/projects/boards")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProjectsBoards", method="GET", path="/v1/projects/boards")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/boards")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProjectsBoards")
    public GetProjectBoardsResponse getProjectsBoards(
    );

     /**
     * Get project phases
     *
     * Returns all active project phases under a specific board.
     *
     * @param boardId ID of the board for which phases are requested
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getProjectsPhases", method="GET", path="/v1/projects/phases")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getProjectsPhases", method="GET", path="/v1/projects/phases")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/phases")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getProjectsPhases")
    public GetProjectPhasesResponse getProjectsPhases(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("board_id") @jakarta.ws.rs.QueryParam("board_id") Integer boardId
    );

     /**
     * Update activity in project plan
     *
     * Updates an activity phase or group in a project.
     *
     * @param id The ID of the project
     * @param activityId The ID of the activity
     * @param projectPutPlanItemBodyObject 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="putProjectPlanActivity", method="PUT", path="/v1/projects/{id}/plan/activities/{activityId}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="putProjectPlanActivity", method="PUT", path="/v1/projects/{id}/plan/activities/{activityId}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}/plan/activities/{activityId}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("putProjectPlanActivity")
    public UpdateActivityPlanItemResponse putProjectPlanActivity(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("activityId") @jakarta.ws.rs.PathParam("activityId")Integer activityId, 
        ProjectPutPlanItemBodyObject projectPutPlanItemBodyObject
    );

     /**
     * Update task in project plan
     *
     * Updates a task phase or group in a project.
     *
     * @param id The ID of the project
     * @param taskId The ID of the task
     * @param projectPutPlanItemBodyObject 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="putProjectPlanTask", method="PUT", path="/v1/projects/{id}/plan/tasks/{taskId}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="putProjectPlanTask", method="PUT", path="/v1/projects/{id}/plan/tasks/{taskId}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}/plan/tasks/{taskId}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("putProjectPlanTask")
    public UpdateTaskPlanItemResponse putProjectPlanTask(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("taskId") @jakarta.ws.rs.PathParam("taskId")Integer taskId, 
        ProjectPutPlanItemBodyObject projectPutPlanItemBodyObject
    );

     /**
     * Update a project
     *
     * Updates a project.
     *
     * @param id The ID of the project
     * @param updateProjectRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateProject", method="PUT", path="/v1/projects/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateProject", method="PUT", path="/v1/projects/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateProject")
    public UpdateProjectResponse updateProject(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        UpdateProjectRequest updateProjectRequest
    );

}