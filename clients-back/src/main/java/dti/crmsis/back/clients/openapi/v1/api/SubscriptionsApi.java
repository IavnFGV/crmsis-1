package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddRecurringSubscriptionRequest;
import dti.crmsis.back.clients.openapi.v1.model.AddSubscriptionInstallmentRequest;
import dti.crmsis.back.clients.openapi.v1.model.CancelRecurringSubscriptionRequest;
import dti.crmsis.back.clients.openapi.v1.model.GetPaymentsResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetSubscriptionsIdResponse;
import dti.crmsis.back.clients.openapi.v1.model.UpdateRecurringSubscriptionRequest;
import dti.crmsis.back.clients.openapi.v1.model.UpdateSubscriptionInstallmentRequest;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/subscriptions")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Subscriptions")
@jakarta.enterprise.context.ApplicationScoped
public interface SubscriptionsApi {

     /**
     * Add a recurring subscription
     *
     * Adds a new recurring subscription.
     *
     * @param addRecurringSubscriptionRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addRecurringSubscription", method="POST", path="/v1/subscriptions/recurring")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addRecurringSubscription", method="POST", path="/v1/subscriptions/recurring")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Path("/recurring")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addRecurringSubscription")
    public GetSubscriptionsIdResponse addRecurringSubscription(
        AddRecurringSubscriptionRequest addRecurringSubscriptionRequest
    );

     /**
     * Add an installment subscription
     *
     * Adds a new installment subscription.
     *
     * @param addSubscriptionInstallmentRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addSubscriptionInstallment", method="POST", path="/v1/subscriptions/installment")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addSubscriptionInstallment", method="POST", path="/v1/subscriptions/installment")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Path("/installment")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addSubscriptionInstallment")
    public GetSubscriptionsIdResponse addSubscriptionInstallment(
        AddSubscriptionInstallmentRequest addSubscriptionInstallmentRequest
    );

     /**
     * Cancel a recurring subscription
     *
     * Cancels a recurring subscription.
     *
     * @param id The ID of the subscription
     * @param cancelRecurringSubscriptionRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="cancelRecurringSubscription", method="PUT", path="/v1/subscriptions/recurring/{id}/cancel")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="cancelRecurringSubscription", method="PUT", path="/v1/subscriptions/recurring/{id}/cancel")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/recurring/{id}/cancel")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("cancelRecurringSubscription")
    public GetSubscriptionsIdResponse cancelRecurringSubscription(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        CancelRecurringSubscriptionRequest cancelRecurringSubscriptionRequest
    );

     /**
     * Delete a subscription
     *
     * Marks an installment or a recurring subscription as deleted.
     *
     * @param id The ID of the subscription
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteSubscription", method="DELETE", path="/v1/subscriptions/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteSubscription", method="DELETE", path="/v1/subscriptions/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteSubscription")
    public GetSubscriptionsIdResponse deleteSubscription(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Find subscription by deal
     *
     * Returns details of an installment or a recurring subscription by the deal ID.
     *
     * @param dealId The ID of the deal
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="findSubscriptionByDeal", method="GET", path="/v1/subscriptions/find/{dealId}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="findSubscriptionByDeal", method="GET", path="/v1/subscriptions/find/{dealId}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/find/{dealId}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("findSubscriptionByDeal")
    public GetSubscriptionsIdResponse findSubscriptionByDeal(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("dealId") @jakarta.ws.rs.PathParam("dealId")Integer dealId
    );

     /**
     * Get details of a subscription
     *
     * Returns details of an installment or a recurring subscription.
     *
     * @param id The ID of the subscription
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getSubscription", method="GET", path="/v1/subscriptions/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getSubscription", method="GET", path="/v1/subscriptions/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getSubscription")
    public GetSubscriptionsIdResponse getSubscription(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get all payments of a subscription
     *
     * Returns all payments of an installment or recurring subscription.
     *
     * @param id The ID of the subscription
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getSubscriptionPayments", method="GET", path="/v1/subscriptions/{id}/payments")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getSubscriptionPayments", method="GET", path="/v1/subscriptions/{id}/payments")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/payments")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getSubscriptionPayments")
    public GetPaymentsResponse getSubscriptionPayments(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Update a recurring subscription
     *
     * Updates a recurring subscription.
     *
     * @param id The ID of the subscription
     * @param updateRecurringSubscriptionRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateRecurringSubscription", method="PUT", path="/v1/subscriptions/recurring/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateRecurringSubscription", method="PUT", path="/v1/subscriptions/recurring/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/recurring/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateRecurringSubscription")
    public GetSubscriptionsIdResponse updateRecurringSubscription(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        UpdateRecurringSubscriptionRequest updateRecurringSubscriptionRequest
    );

     /**
     * Update an installment subscription
     *
     * Updates an installment subscription.
     *
     * @param id The ID of the subscription
     * @param updateSubscriptionInstallmentRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateSubscriptionInstallment", method="PUT", path="/v1/subscriptions/installment/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateSubscriptionInstallment", method="PUT", path="/v1/subscriptions/installment/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/installment/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateSubscriptionInstallment")
    public GetSubscriptionsIdResponse updateSubscriptionInstallment(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        UpdateSubscriptionInstallmentRequest updateSubscriptionInstallmentRequest
    );

}