package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddTeamRequest;
import dti.crmsis.back.clients.openapi.v1.model.AddTeamUserRequest;
import java.math.BigDecimal;
import dti.crmsis.back.clients.openapi.v1.model.DeleteTeamUserRequest;
import dti.crmsis.back.clients.openapi.v1.model.FailResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetTeamResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetTeamsResponse;
import dti.crmsis.back.clients.openapi.v1.model.UpdateTeamRequest;
import dti.crmsis.back.clients.openapi.v1.model.UserIds;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/legacyTeams")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "LegacyTeams")
@jakarta.enterprise.context.ApplicationScoped
public interface LegacyTeamsApi {

     /**
     * Add a new team
     *
     * Adds a new team to the company and returns the created object.
     *
     * @param addTeamRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addTeam", method="POST", path="/v1/legacyTeams")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addTeam", method="POST", path="/v1/legacyTeams")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addTeam")
    public GetTeamResponse addTeam(
        AddTeamRequest addTeamRequest
    );

     /**
     * Add users to a team
     *
     * Adds users to an existing team.
     *
     * @param id The ID of the team
     * @param addTeamUserRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addTeamUser", method="POST", path="/v1/legacyTeams/{id}/users")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addTeamUser", method="POST", path="/v1/legacyTeams/{id}/users")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Path("/{id}/users")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addTeamUser")
    public UserIds addTeamUser(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        AddTeamUserRequest addTeamUserRequest
    );

     /**
     * Delete users from a team
     *
     * Deletes users from an existing team.
     *
     * @param id The ID of the team
     * @param deleteTeamUserRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteTeamUser", method="DELETE", path="/v1/legacyTeams/{id}/users")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteTeamUser", method="DELETE", path="/v1/legacyTeams/{id}/users")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}/users")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteTeamUser")
    public UserIds deleteTeamUser(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        DeleteTeamUserRequest deleteTeamUserRequest
    );

     /**
     * Get a single team
     *
     * Returns data about a specific team.
     *
     * @param id The ID of the team
     * @param skipUsers When enabled, the teams will not include IDs of member users
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getTeam", method="GET", path="/v1/legacyTeams/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getTeam", method="GET", path="/v1/legacyTeams/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getTeam")
    public GetTeamResponse getTeam(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("skip_users") @jakarta.ws.rs.QueryParam("skip_users") BigDecimal skipUsers
    );

     /**
     * Get all users in a team
     *
     * Returns a list of all user IDs within a team.
     *
     * @param id The ID of the team
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getTeamUsers", method="GET", path="/v1/legacyTeams/{id}/users")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getTeamUsers", method="GET", path="/v1/legacyTeams/{id}/users")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/users")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getTeamUsers")
    public UserIds getTeamUsers(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get all teams
     *
     * Returns data about teams within the company.
     *
     * @param orderBy The field name to sort returned teams by
     * @param skipUsers When enabled, the teams will not include IDs of member users
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getTeams", method="GET", path="/v1/legacyTeams")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getTeams", method="GET", path="/v1/legacyTeams")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getTeams")
    public GetTeamsResponse getTeams(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("order_by") @jakarta.ws.rs.QueryParam("order_by") String orderBy, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("skip_users") @jakarta.ws.rs.QueryParam("skip_users") BigDecimal skipUsers
    );

     /**
     * Get all teams of a user
     *
     * Returns data about all teams which have the specified user as a member.
     *
     * @param id The ID of the user
     * @param orderBy The field name to sort returned teams by
     * @param skipUsers When enabled, the teams will not include IDs of member users
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getUserTeams", method="GET", path="/v1/legacyTeams/user/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getUserTeams", method="GET", path="/v1/legacyTeams/user/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/user/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getUserTeams")
    public GetTeamsResponse getUserTeams(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("order_by") @jakarta.ws.rs.QueryParam("order_by") String orderBy, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("skip_users") @jakarta.ws.rs.QueryParam("skip_users") BigDecimal skipUsers
    );

     /**
     * Update a team
     *
     * Updates an existing team and returns the updated object.
     *
     * @param id The ID of the team
     * @param updateTeamRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateTeam", method="PUT", path="/v1/legacyTeams/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateTeam", method="PUT", path="/v1/legacyTeams/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateTeam")
    public GetTeamResponse updateTeam(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        UpdateTeamRequest updateTeamRequest
    );

}