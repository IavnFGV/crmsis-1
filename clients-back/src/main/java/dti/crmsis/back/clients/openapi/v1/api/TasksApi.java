package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddTaskRequest;
import dti.crmsis.back.clients.openapi.v1.model.AddTaskResponse;
import java.math.BigDecimal;
import dti.crmsis.back.clients.openapi.v1.model.DeleteTaskResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetTaskResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetTasksResponse;
import dti.crmsis.back.clients.openapi.v1.model.UpdateProjectRequest1;
import dti.crmsis.back.clients.openapi.v1.model.UpdateTaskResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/tasks")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Tasks")
@jakarta.enterprise.context.ApplicationScoped
public interface TasksApi {

     /**
     * Add a task
     *
     * Adds a new task.
     *
     * @param addTaskRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addTask", method="POST", path="/v1/tasks")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addTask", method="POST", path="/v1/tasks")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addTask")
    public AddTaskResponse addTask(
        AddTaskRequest addTaskRequest
    );

     /**
     * Delete a task
     *
     * Marks a task as deleted. If the task has subtasks then those will also be deleted.
     *
     * @param id The ID of the task
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteTask", method="DELETE", path="/v1/tasks/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteTask", method="DELETE", path="/v1/tasks/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteTask")
    public DeleteTaskResponse deleteTask(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get details of a task
     *
     * Returns the details of a specific task.
     *
     * @param id The ID of the task
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getTask", method="GET", path="/v1/tasks/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getTask", method="GET", path="/v1/tasks/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getTask")
    public GetTaskResponse getTask(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get all tasks
     *
     * Returns all tasks. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>.
     *
     * @param cursor For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param limit For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned.
     * @param assigneeId If supplied, only tasks that are assigned to this user are returned
     * @param projectId If supplied, only tasks that are assigned to this project are returned
     * @param parentTaskId If `null` is supplied then only parent tasks are returned. If integer is supplied then only subtasks of a specific task are returned. By default all tasks are returned.
     * @param done Whether the task is done or not. `0` = Not done, `1` = Done. If not omitted then returns both done and not done tasks.
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getTasks", method="GET", path="/v1/tasks")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getTasks", method="GET", path="/v1/tasks")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getTasks")
    public GetTasksResponse getTasks(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("cursor") @jakarta.ws.rs.QueryParam("cursor") String cursor, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("limit") @jakarta.ws.rs.QueryParam("limit") Integer limit, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("assignee_id") @jakarta.ws.rs.QueryParam("assignee_id") Integer assigneeId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("project_id") @jakarta.ws.rs.QueryParam("project_id") Integer projectId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("parent_task_id") @jakarta.ws.rs.QueryParam("parent_task_id") Integer parentTaskId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("done") @jakarta.ws.rs.QueryParam("done") BigDecimal done
    );

     /**
     * Update a task
     *
     * Updates a task.
     *
     * @param id The ID of the task
     * @param updateProjectRequest1 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateTask", method="PUT", path="/v1/tasks/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateTask", method="PUT", path="/v1/tasks/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateTask")
    public UpdateTaskResponse updateTask(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        UpdateProjectRequest1 updateProjectRequest1
    );

}