package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddUserProviderLinkRequest;
import dti.crmsis.back.clients.openapi.v1.model.GetUserProviderLinkSuccessResponse;
import java.util.UUID;
import dti.crmsis.back.clients.openapi.v1.model.UserProviderLinkErrorResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/meetings/userProviderLinks")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Meetings")
@jakarta.enterprise.context.ApplicationScoped
public interface MeetingsApi {

     /**
     * Delete the link between a user and the installed video call integration
     *
     * A video calling provider must call this endpoint to remove the link between a user and the installed video calling app.
     *
     * @param id Unique identifier linking a user to the installed integration
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteUserProviderLink", method="DELETE", path="/v1/meetings/userProviderLinks/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteUserProviderLink", method="DELETE", path="/v1/meetings/userProviderLinks/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteUserProviderLink")
    public GetUserProviderLinkSuccessResponse deleteUserProviderLink(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")UUID id
    );

     /**
     * Link a user with the installed video call integration
     *
     * A video calling provider must call this endpoint after a user has installed the video calling app so that the new user's information is sent.
     *
     * @param addUserProviderLinkRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="saveUserProviderLink", method="POST", path="/v1/meetings/userProviderLinks")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="saveUserProviderLink", method="POST", path="/v1/meetings/userProviderLinks")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("saveUserProviderLink")
    public GetUserProviderLinkSuccessResponse saveUserProviderLink(
        AddUserProviderLinkRequest addUserProviderLinkRequest
    );

}