package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddStageRequest;
import java.math.BigDecimal;
import dti.crmsis.back.clients.openapi.v1.model.DeleteStageResponse;
import dti.crmsis.back.clients.openapi.v1.model.DeleteStagesResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetStageDealsResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetStageResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetStagesResponse;
import dti.crmsis.back.clients.openapi.v1.model.UpdateStageRequest;
import dti.crmsis.back.clients.openapi.v1.model.UpsertStageResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/stages")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Stages")
@jakarta.enterprise.context.ApplicationScoped
public interface StagesApi {

     /**
     * Add a new stage
     *
     * Adds a new stage, returns the ID upon success.
     *
     * @param addStageRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addStage", method="POST", path="/v1/stages")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addStage", method="POST", path="/v1/stages")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addStage")
    public UpsertStageResponse addStage(
        AddStageRequest addStageRequest
    );

     /**
     * Delete a stage
     *
     * Marks a stage as deleted.
     *
     * @param id The ID of the stage
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteStage", method="DELETE", path="/v1/stages/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteStage", method="DELETE", path="/v1/stages/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteStage")
    public DeleteStageResponse deleteStage(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Delete multiple stages in bulk
     *
     * Marks multiple stages as deleted.
     *
     * @param ids The comma-separated stage IDs to delete
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteStages", method="DELETE", path="/v1/stages")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteStages", method="DELETE", path="/v1/stages")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteStages")
    public DeleteStagesResponse deleteStages(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("ids") @jakarta.ws.rs.QueryParam("ids") String ids
    );

     /**
     * Get one stage
     *
     * Returns data about a specific stage.
     *
     * @param id The ID of the stage
     * @param everyone If `everyone=1` is provided, deals summary will return deals owned by every user
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getStage", method="GET", path="/v1/stages/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getStage", method="GET", path="/v1/stages/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getStage")
    public GetStageResponse getStage(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("everyone") @jakarta.ws.rs.QueryParam("everyone") BigDecimal everyone
    );

     /**
     * Get deals in a stage
     *
     * Lists deals in a specific stage. If no parameters are provided open deals owned by the authorized user will be returned.
     *
     * @param id The ID of the stage
     * @param filterId If supplied, only deals matching the given filter will be returned
     * @param userId If supplied, `filter_id` will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.
     * @param everyone If supplied, `filter_id` and `user_id` will not be considered â€“ instead, deals owned by everyone will be returned
     * @param start Pagination start
     * @param limit Items shown per page
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getStageDeals", method="GET", path="/v1/stages/{id}/deals")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getStageDeals", method="GET", path="/v1/stages/{id}/deals")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/deals")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getStageDeals")
    public GetStageDealsResponse getStageDeals(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("filter_id") @jakarta.ws.rs.QueryParam("filter_id") Integer filterId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("user_id") @jakarta.ws.rs.QueryParam("user_id") Integer userId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("everyone") @jakarta.ws.rs.QueryParam("everyone") BigDecimal everyone, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("start") @jakarta.ws.rs.QueryParam("start") Integer start, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("limit") @jakarta.ws.rs.QueryParam("limit") Integer limit
    );

     /**
     * Get all stages
     *
     * Returns data about all stages.
     *
     * @param pipelineId The ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched.
     * @param start Pagination start
     * @param limit Items shown per page
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getStages", method="GET", path="/v1/stages")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getStages", method="GET", path="/v1/stages")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getStages")
    public GetStagesResponse getStages(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("pipeline_id") @jakarta.ws.rs.QueryParam("pipeline_id") Integer pipelineId, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("start") @jakarta.ws.rs.QueryParam("start") Integer start, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("limit") @jakarta.ws.rs.QueryParam("limit") Integer limit
    );

     /**
     * Update stage details
     *
     * Updates the properties of a stage.
     *
     * @param id The ID of the stage
     * @param updateStageRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateStage", method="PUT", path="/v1/stages/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateStage", method="PUT", path="/v1/stages/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateStage")
    public UpsertStageResponse updateStage(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        UpdateStageRequest updateStageRequest
    );

}