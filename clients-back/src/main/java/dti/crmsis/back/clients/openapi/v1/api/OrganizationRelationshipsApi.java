package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddOrganizationRelationshipRequest;
import dti.crmsis.back.clients.openapi.v1.model.AddOrganizationRelationshipResponse;
import dti.crmsis.back.clients.openapi.v1.model.DeleteOrganizationRelationshipResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetOrganizationRelationshipResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetOrganizationRelationshipsResponse;
import dti.crmsis.back.clients.openapi.v1.model.OrganizationRelationship;
import dti.crmsis.back.clients.openapi.v1.model.UpdateOrganizationRelationshipResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/organizationRelationships")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "OrganizationRelationships")
@jakarta.enterprise.context.ApplicationScoped
public interface OrganizationRelationshipsApi {

     /**
     * Create an organization relationship
     *
     * Creates and returns an organization relationship.
     *
     * @param addOrganizationRelationshipRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addOrganizationRelationship", method="POST", path="/v1/organizationRelationships")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addOrganizationRelationship", method="POST", path="/v1/organizationRelationships")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addOrganizationRelationship")
    public AddOrganizationRelationshipResponse addOrganizationRelationship(
        AddOrganizationRelationshipRequest addOrganizationRelationshipRequest
    );

     /**
     * Delete an organization relationship
     *
     * Deletes an organization relationship and returns the deleted ID.
     *
     * @param id The ID of the organization relationship
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteOrganizationRelationship", method="DELETE", path="/v1/organizationRelationships/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteOrganizationRelationship", method="DELETE", path="/v1/organizationRelationships/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteOrganizationRelationship")
    public DeleteOrganizationRelationshipResponse deleteOrganizationRelationship(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get one organization relationship
     *
     * Finds and returns an organization relationship from its ID.
     *
     * @param id The ID of the organization relationship
     * @param orgId The ID of the base organization for the returned calculated values
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getOrganizationRelationship", method="GET", path="/v1/organizationRelationships/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getOrganizationRelationship", method="GET", path="/v1/organizationRelationships/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getOrganizationRelationship")
    public GetOrganizationRelationshipResponse getOrganizationRelationship(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("org_id") @jakarta.ws.rs.QueryParam("org_id") Integer orgId
    );

     /**
     * Get all relationships for organization
     *
     * Gets all of the relationships for a supplied organization ID.
     *
     * @param orgId The ID of the organization to get relationships for
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getOrganizationRelationships", method="GET", path="/v1/organizationRelationships")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getOrganizationRelationships", method="GET", path="/v1/organizationRelationships")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getOrganizationRelationships")
    public GetOrganizationRelationshipsResponse getOrganizationRelationships(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("org_id") @jakarta.ws.rs.QueryParam("org_id") Integer orgId
    );

     /**
     * Update an organization relationship
     *
     * Updates and returns an organization relationship.
     *
     * @param id The ID of the organization relationship
     * @param organizationRelationship 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateOrganizationRelationship", method="PUT", path="/v1/organizationRelationships/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateOrganizationRelationship", method="PUT", path="/v1/organizationRelationships/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateOrganizationRelationship")
    public UpdateOrganizationRelationshipResponse updateOrganizationRelationship(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id, 
        OrganizationRelationship organizationRelationship
    );

}