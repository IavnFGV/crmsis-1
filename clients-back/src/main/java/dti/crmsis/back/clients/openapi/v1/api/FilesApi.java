package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddFileResponse;
import dti.crmsis.back.clients.openapi.v1.model.AddRemoteFileAndLinkItToItemResponse;
import dti.crmsis.back.clients.openapi.v1.model.DeleteFileResponse;
import java.io.File;
import dti.crmsis.back.clients.openapi.v1.model.GetFileResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetFilesResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetLinkRemoteFileToItemResponse;
import java.util.UUID;
import dti.crmsis.back.clients.openapi.v1.model.UpdateFileResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/files")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Files")
@jakarta.enterprise.context.ApplicationScoped
public interface FilesApi {

     /**
     * Add file
     *
     * Lets you upload a file and associate it with a deal, person, organization, activity, product or lead. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a file</a>.
     *
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addFile", method="POST", path="/v1/files")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addFile", method="POST", path="/v1/files")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"multipart/form-data"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addFile")
    public AddFileResponse addFile(
        @jakarta.ws.rs.BeanParam AddFileMultipartForm multipartForm
        
        
        
        
        
    );

    public static class AddFileMultipartForm {
        @jakarta.ws.rs.FormParam("file")
        @org.jboss.resteasy.reactive.PartFilename("fileFile")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.APPLICATION_OCTET_STREAM)
        public File _file;
        @jakarta.ws.rs.FormParam("deal_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public Integer dealId;
        @jakarta.ws.rs.FormParam("person_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public Integer personId;
        @jakarta.ws.rs.FormParam("org_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public Integer orgId;
        @jakarta.ws.rs.FormParam("product_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public Integer productId;
        @jakarta.ws.rs.FormParam("activity_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public Integer activityId;
        @jakarta.ws.rs.FormParam("lead_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public UUID leadId;
    }

     /**
     * Create a remote file and link it to an item
     *
     * Creates a new empty file in the remote location (`googledrive`) that will be linked to the item you supply. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a remote file</a>.
     *
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addFileAndLinkIt", method="POST", path="/v1/files/remote")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addFileAndLinkIt", method="POST", path="/v1/files/remote")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Path("/remote")
    @jakarta.ws.rs.Consumes({"application/x-www-form-urlencoded"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addFileAndLinkIt")
    public AddRemoteFileAndLinkItToItemResponse addFileAndLinkIt(
        @jakarta.ws.rs.BeanParam AddFileAndLinkItMultipartForm multipartForm
        
        
        
        
        
    );

    public static class AddFileAndLinkItMultipartForm {
        @jakarta.ws.rs.FormParam("file_type")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String fileType;
        @jakarta.ws.rs.FormParam("title")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String title;
        @jakarta.ws.rs.FormParam("item_type")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String itemType;
        @jakarta.ws.rs.FormParam("item_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public Integer itemId;
        @jakarta.ws.rs.FormParam("remote_location")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String remoteLocation;
    }

     /**
     * Delete a file
     *
     * Marks a file as deleted. After 30 days, the file will be permanently deleted.
     *
     * @param id The ID of the file
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteFile", method="DELETE", path="/v1/files/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteFile", method="DELETE", path="/v1/files/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteFile")
    public DeleteFileResponse deleteFile(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Download one file
     *
     * Initializes a file download.
     *
     * @param id The ID of the file
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="downloadFile", method="GET", path="/v1/files/{id}/download")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="downloadFile", method="GET", path="/v1/files/{id}/download")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}/download")
    @jakarta.ws.rs.Produces({"application/octet-stream"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("downloadFile")
    public byte[] downloadFile(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get one file
     *
     * Returns data about a specific file.
     *
     * @param id The ID of the file
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getFile", method="GET", path="/v1/files/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getFile", method="GET", path="/v1/files/{id}")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getFile")
    public GetFileResponse getFile(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get all files
     *
     * Returns data about all files.
     *
     * @param start Pagination start
     * @param limit Items shown per page. Please note that a maximum value of 100 is allowed.
     * @param sort Supported fields: `id`, `update_time`
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getFiles", method="GET", path="/v1/files")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getFiles", method="GET", path="/v1/files")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getFiles")
    public GetFilesResponse getFiles(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("start") @jakarta.ws.rs.QueryParam("start") Integer start, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("limit") @jakarta.ws.rs.QueryParam("limit") Integer limit, 
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("sort") @jakarta.ws.rs.QueryParam("sort") String sort
    );

     /**
     * Link a remote file to an item
     *
     * Links an existing remote file (`googledrive`) to the item you supply. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\">adding a remote file</a>.
     *
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="linkFileToItem", method="POST", path="/v1/files/remoteLink")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="linkFileToItem", method="POST", path="/v1/files/remoteLink")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Path("/remoteLink")
    @jakarta.ws.rs.Consumes({"application/x-www-form-urlencoded"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("linkFileToItem")
    public GetLinkRemoteFileToItemResponse linkFileToItem(
        @jakarta.ws.rs.BeanParam LinkFileToItemMultipartForm multipartForm
        
        
        
        
        
    );

    public static class LinkFileToItemMultipartForm {
        @jakarta.ws.rs.FormParam("item_type")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String itemType;
        @jakarta.ws.rs.FormParam("item_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public Integer itemId;
        @jakarta.ws.rs.FormParam("remote_id")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String remoteId;
        @jakarta.ws.rs.FormParam("remote_location")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String remoteLocation;
    }

     /**
     * Update file details
     *
     * Updates the properties of a file.
     *
     * @param id The ID of the file
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="updateFile", method="PUT", path="/v1/files/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="updateFile", method="PUT", path="/v1/files/{id}")
    @jakarta.ws.rs.PUT
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Consumes({"application/x-www-form-urlencoded"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("updateFile")
    public UpdateFileResponse updateFile(
        @jakarta.ws.rs.BeanParam UpdateFileMultipartForm multipartForm,
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
        
        
        
        
    );

    public static class UpdateFileMultipartForm {
        @jakarta.ws.rs.FormParam("name")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String name;
        @jakarta.ws.rs.FormParam("description")
        @org.jboss.resteasy.reactive.PartType(jakarta.ws.rs.core.MediaType.TEXT_PLAIN)
        public String description;
    }

}