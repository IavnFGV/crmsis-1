package dti.crmsis.back.clients.openapi.v1.api;

import java.util.List;
import java.util.Map;


import dti.crmsis.back.clients.openapi.v1.model.AddWebhookRequest;
import dti.crmsis.back.clients.openapi.v1.model.BaseResponse;
import dti.crmsis.back.clients.openapi.v1.model.DeleteWebhook403Response;
import dti.crmsis.back.clients.openapi.v1.model.GetWebhookResponse;
import dti.crmsis.back.clients.openapi.v1.model.GetWebhooksResponse;
import dti.crmsis.back.clients.openapi.v1.model.UnathorizedResponse;
import dti.crmsis.back.clients.openapi.v1.model.WebhooksBadRequestResponse;
/**
  * Pipedrive API v1
  * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p>
  */
@jakarta.ws.rs.Path("/webhooks")
@io.quarkiverse.openapi.generator.annotations.GeneratedClass(value="openapi.yaml", tag = "Webhooks")
@jakarta.enterprise.context.ApplicationScoped
public interface WebhooksApi {

     /**
     * Create a new Webhook
     *
     * Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `added.deal` for any newly added deals, `deleted.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details.
     *
     * @param addWebhookRequest 
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="addWebhook", method="POST", path="/v1/webhooks")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="addWebhook", method="POST", path="/v1/webhooks")
    @jakarta.ws.rs.POST
    @jakarta.ws.rs.Consumes({"application/json"})
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("addWebhook")
    public GetWebhookResponse addWebhook(
        AddWebhookRequest addWebhookRequest
    );

     /**
     * Delete existing Webhook
     *
     * Deletes the specified Webhook.
     *
     * @param id The ID of the Webhook to delete
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="deleteWebhook", method="DELETE", path="/v1/webhooks/{id}")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="deleteWebhook", method="DELETE", path="/v1/webhooks/{id}")
    @jakarta.ws.rs.DELETE
    @jakarta.ws.rs.Path("/{id}")
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("deleteWebhook")
    public BaseResponse deleteWebhook(
        @io.quarkiverse.openapi.generator.annotations.GeneratedParam("id") @jakarta.ws.rs.PathParam("id")Integer id
    );

     /**
     * Get all Webhooks
     *
     * Returns data about all the Webhooks of a company.
     *
     */
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="api_key", openApiSpecId="openapi_yaml", operationId="getWebhooks", method="GET", path="/v1/webhooks")
    @io.quarkiverse.openapi.generator.markers.OperationMarker(name="oauth2", openApiSpecId="openapi_yaml", operationId="getWebhooks", method="GET", path="/v1/webhooks")
    @jakarta.ws.rs.GET
    @jakarta.ws.rs.Produces({"application/json"})
    @io.quarkiverse.openapi.generator.annotations.GeneratedMethod("getWebhooks")
    public GetWebhooksResponse getWebhooks(
    );

}